# Generated by Django 4.2.6 on 2023-10-20 23:17

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('DQIT_Endpoint', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('backup', 'Backup'), ('restore', 'Restore')], default='backup', max_length=10)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=10)),
                ('start_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_run_datetime', models.DateTimeField(blank=True, null=True)),
                ('next_run_datetime', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('folder_path', models.CharField(default='E:\\projects\\DataIssueTracker\\DITApi\\media\x08ackups', max_length=255)),
                ('mysql_cmd_path', models.CharField(default='C:\\Program Files\\MySQL\\MySQL Server 8.0\x08in\\mysqldump', help_text='For windows environment', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_length', models.IntegerField(choices=[(6, '6 characters'), (8, '8 characters'), (10, '10 characters'), (16, '16 characters')], default=8)),
                ('min_uppercase_letters', models.IntegerField(choices=[(1, 'At least 1 uppercase letter'), (2, 'At least 2 uppercase letters')], default=1)),
                ('min_lowercase_letters', models.IntegerField(choices=[(1, 'At least 1 lowercase letter'), (2, 'At least 2 lowercase letters')], default=1)),
                ('min_digits', models.IntegerField(choices=[(1, 'At least 1 digit'), (2, 'At least 2 digits')], default=1)),
                ('min_special_characters', models.IntegerField(choices=[(0, 'None'), (1, 'At least 1 special character'), (2, 'At least 2 special characters')], default=0)),
            ],
            options={
                'verbose_name_plural': 'Password Policy',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Roles',
                'db_table': 'Roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profiles')),
                ('phone', models.CharField(default='+254743793901', max_length=15)),
                ('address', models.TextField(blank=True, null=True)),
                ('organisation', models.CharField(default='DQIts', max_length=100)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, default='Kenya', max_length=255, null=True)),
                ('zip', models.CharField(blank=True, default='00100', max_length=10, null=True)),
                ('timezone', timezone_field.fields.TimeZoneField(blank=True, choices_display='WITH_GMT_OFFSET', default='Africa/Nairobi', null=True, use_pytz=True)),
                ('fcm_token', models.TextField(default='None')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facilities', models.ManyToManyField(blank=True, null=True, to='DQIT_Endpoint.facilities')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='DQITAuth.roles')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
