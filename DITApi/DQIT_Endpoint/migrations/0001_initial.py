# Generated by Django 4.2.5 on 2023-10-10 10:49

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSyncSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_issues_folder_url', models.CharField(default='E:/projects/DataIssueTracker/DITApi/media/facility data issues', max_length=500)),
                ('faclity_list_csv_path', models.CharField(default='E:/projects/DataIssueTracker/DITApi/media/Hospital ID and Names.csv', max_length=500)),
                ('data_sync_frequency', models.IntegerField(default=60, help_text='In seconds')),
                ('data_sync_shedule_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Data Sync Settings',
            },
        ),
        migrations.CreateModel(
            name='EmailSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_reply_email_name', models.CharField(blank=True, default='DQITs Center', max_length=255, null=True)),
                ('support_reply_email', models.EmailField(blank=True, default='titusowuor30@gmail.com', max_length=255, null=True)),
                ('email_password', models.CharField(blank=True, default='xdofqrtncuimlewm', max_length=255, null=True)),
                ('email_port', models.IntegerField(blank=True, default=587, null=True)),
                ('email_backed', models.CharField(blank=True, default='smtp', max_length=100, null=True)),
                ('email_host', models.CharField(blank=True, default='smtp.gmail.com', max_length=255, null=True)),
                ('fail_silently', models.BooleanField(blank=True, default=True, null=True)),
                ('use_tls', models.BooleanField(blank=True, default=True, null=True)),
                ('code_place_holders', tinymce.models.HTMLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Email Settings',
            },
        ),
        migrations.CreateModel(
            name='Facilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_code', models.CharField(max_length=100)),
                ('facility_name', models.CharField(max_length=100)),
                ('country', models.CharField(default='Kenya', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
                'db_table': 'Faclities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataQualityIssues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=100)),
                ('date_of_entry', models.DateField(blank=True, null=True)),
                ('inconsistency', tinymce.models.HTMLField()),
                ('action_taken', models.CharField(choices=[('Entry Corrected', 'Entry Corrected'), ('Data Matches Source Document', 'Data Matches Source Document'), ('Data Already Available', 'Data Already Available'), ('No Data Needed', 'No Data Needed'), ('Pending', 'Pending')], default='Pending', max_length=100)),
                ('date_action_taken', models.DateField(blank=True, null=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='DQIT_Endpoint.facilities')),
            ],
            options={
                'verbose_name_plural': 'Data Quality Issues',
                'db_table': 'data_issues',
                'managed': True,
            },
        ),
    ]
